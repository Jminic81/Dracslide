gutenberg_works(title==str_detect(title,'Frankenstein'))
library("tidytext", lib.loc="~/R/win-library/3.4")
library("tm", lib.loc="~/R/win-library/3.4")
gutenberg_works(title==str_detect(title,'Frankenstein'))
gutenberg_works(title=='Dracula')
gutenberg_works(title==str_detect(title,'Frankenstein'))
gutenberg_works(title=='Dracula')
#We need the id number of a book that we don't know the whole title.  Use
#stringr to find a word in the title
gutenberg_works(title==str_detect(title,'Frankenstein'))
words_df<-sns%>%
unnest_tokens(word,text)
words_df<-words_df%>%
filter(!(word %in% stop_words$word))
word_freq<-words_df%>%
group_by(word)%>%
summarize(count=n())
wordcloud(word_freq$word,word_freq$count,min.freq=25)
library("wordcloud", lib.loc="~/R/win-library/3.4")
library("janeaustenr", lib.loc="~/R/win-library/3.4")
words_df<-sns%>%
unnest_tokens(word,text)
words_df<-words_df%>%
filter(!(word %in% stop_words$word))
word_freq<-words_df%>%
group_by(word)%>%
summarize(count=n())
wordcloud(word_freq$word,word_freq$count,min.freq=25)
library("tidytext", lib.loc="~/R/win-library/3.4")
library(tidytext)
library("devtools", lib.loc="~/R/win-library/3.4")
install_github('rstudio/blogdown')
library(blogdown)
install_hugo0
install_hugo()
library(devtools)
install_version('blogdown')
install_version('blogdown',version='0.1')
library("dplyr", lib.loc="~/R/win-library/3.4")
library("gutenbergr", lib.loc="~/R/win-library/3.4")
library("ggplot2", lib.loc="~/R/win-library/3.4")
library("tm", lib.loc="~/R/win-library/3.4")
library("tidytext", lib.loc="~/R/win-library/3.4")
detach("package:tm", unload=TRUE)
library("stringr", lib.loc="~/R/win-library/3.4")
library("stringr", lib.loc="~/R/win-library/3.4")
library("stringr", lib.loc="~/R/win-library/3.4")
.rs.restartR()
library("dplyr", lib.loc="~/R/win-library/3.4")
library("gutenbergr", lib.loc="~/R/win-library/3.4")
library("ggplot2", lib.loc="~/R/win-library/3.4")
library("stringr", lib.loc="~/R/win-library/3.4")
library("tidytext", lib.loc="~/R/win-library/3.4")
library("knitr", lib.loc="~/R/win-library/3.4")
setwd("C:/Users/Judy/Desktop/Dracslide")
# Chunk 1
library(dplyr)
# Chunk 2
library(ggplot2)
# Chunk 3
library(gutenbergr)
# Chunk 4
library(stringr)
# Chunk 5
library(tidytext)
# Chunk 6
df<-gutenberg_works(str_detect(title,'Dracula'))
df$gutenberg_id
df$title
# Chunk 7
dracula<-gutenberg_download(345)
colnames(dracula)
substr(dracula$text[500],1,21)
# Chunk 8
dracula_words<-dracula%>%
unnest_tokens(word,text)
colnames(dracula_words)
dracula_words[498:500, ]
# Chunk 9
bing<-get_sentiments('bing')
colnames(bing)
bing[498:500,]
# Chunk 10
dracula_words<-inner_join(dracula_words,bing)
dracula_words$gutenberg_id<-NULL
dracula_words[498:500,]
# Chunk 11
#----------------------------------------------------------
dracula_pos<-dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n(),sentiment=first(sentiment))%>%
arrange(count)%>%
top_n(10,wt=count)
# Chunk 1
library(dplyr)
# Chunk 2
library(ggplot2)
# Chunk 3
library(gutenbergr)
# Chunk 4
library(stringr)
# Chunk 5
library(tidytext)
# Chunk 6
df<-gutenberg_works(str_detect(title,'Dracula'))
df$gutenberg_id
df$title
# Chunk 7
dracula<-gutenberg_download(345)
colnames(dracula)
substr(dracula$text[500],1,21)
# Chunk 8
dracula_words<-dracula%>%
unnest_tokens(word,text)
colnames(dracula_words)
dracula_words[498:500, ]
# Chunk 9
bing<-get_sentiments('bing')
colnames(bing)
bing[498:500,]
# Chunk 10
dracula_words<-inner_join(dracula_words,bing)
dracula_words$gutenberg_id<-NULL
dracula_words[498:500,]
# Chunk 11
dracula_pos<-dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n(),sentiment=first(sentiment))%>%
arrange(count)%>%
top_n(10,wt=count)
# Chunk 12
dracula_pos
# Chunk 1
library(dplyr)
# Chunk 2
library(ggplot2)
# Chunk 3
library(gutenbergr)
# Chunk 4
library(stringr)
# Chunk 5
library(tidytext)
# Chunk 6
df<-gutenberg_works(str_detect(title,'Dracula'))
df$gutenberg_id
df$title
# Chunk 7
dracula<-gutenberg_download(345)
colnames(dracula)
substr(dracula$text[500],1,21)
# Chunk 8
dracula_words<-dracula%>%
unnest_tokens(word,text)
colnames(dracula_words)
dracula_words[498:500, ]
# Chunk 9
bing<-get_sentiments('bing')
colnames(bing)
bing[498:500,]
# Chunk 10
dracula_words<-inner_join(dracula_words,bing)
dracula_words$gutenberg_id<-NULL
dracula_words[498:500,]
# Chunk 11
dracula_pos<-dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n(),sentiment=first(sentiment))%>%
arrange(count)%>%
top_n(10,wt=count)
# Chunk 12
dracula_pos
# Chunk 13
dracula_neg<-dracula_words%>%
filter(sentiment=='negative')%>%
group_by(word)%>%
summarize(count=n(),sentiment=first(sentiment))%>%
arrange(count)%>%
filter(word != 'miss')%>%
top_n(10,wt=count)
# Chunk 14
dracula_neg
# Chunk 15
dracula_pos$word<-factor(dracula_pos$word,levels=dracula_pos$word)
dracula_neg$word<-factor(dracula_neg$word,levels=dracula_neg$word)
dracula_comp<-rbind(dracula_pos,dracula_neg)
plot<-ggplot()+
geom_bar(data=dracula_comp,aes(x=word,y=count,
fill=sentiment, color=sentiment),stat='identity')+
coord_flip()+
facet_wrap(~sentiment,scales='free_y')+
scale_fill_manual(values=c('black','#ea6205'))+
scale_color_manual(values=c('#ea6205','black'))
# Chunk 16
plot
# Chunk 1
library(dplyr)
# Chunk 2
library(ggplot2)
# Chunk 3
library(gutenbergr)
# Chunk 4
library(stringr)
# Chunk 5
library(tidytext)
# Chunk 6
df<-gutenberg_works(str_detect(title,'Dracula'))
df$gutenberg_id
df$title
# Chunk 7
dracula<-gutenberg_download(345)
colnames(dracula)
substr(dracula$text[500],1,21)
# Chunk 8
dracula_words<-dracula%>%
unnest_tokens(word,text)
colnames(dracula_words)
dracula_words[498:500, ]
# Chunk 9
bing<-get_sentiments('bing')
colnames(bing)
bing[498:500,]
# Chunk 10
dracula_words<-inner_join(dracula_words,bing)
dracula_words$gutenberg_id<-NULL
dracula_words[498:500,]
# Chunk 11
dracula_pos<-dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n(),sentiment=first(sentiment))%>%
arrange(count)%>%
top_n(10,wt=count)
# Chunk 12
dracula_pos
# Chunk 13
dracula_neg<-dracula_words%>%
filter(sentiment=='negative')%>%
group_by(word)%>%
summarize(count=n(),sentiment=first(sentiment))%>%
arrange(count)%>%
filter(word != 'miss')%>%
top_n(10,wt=count)
# Chunk 14
dracula_neg
# Chunk 15
dracula_pos$word<-factor(dracula_pos$word,levels=dracula_pos$word)
dracula_neg$word<-factor(dracula_neg$word,levels=dracula_neg$word)
dracula_comp<-rbind(dracula_pos,dracula_neg)
plot<-ggplot()+
geom_bar(data=dracula_comp,aes(x=word,y=count,
fill=sentiment, color=sentiment),stat='identity')+
coord_flip()+
facet_wrap(~sentiment,scales='free_y')+
scale_fill_manual(values=c('black','#ea6205'))+
scale_color_manual(values=c('#ea6205','black'))
# Chunk 16
plot
# Chunk 1
library(dplyr)
# Chunk 2
library(ggplot2)
# Chunk 3
library(gutenbergr)
# Chunk 4
library(stringr)
# Chunk 5
library(tidytext)
# Chunk 6
df<-gutenberg_works(str_detect(title,'Dracula'))
df$gutenberg_id
df$title
# Chunk 7
dracula<-gutenberg_download(345)
colnames(dracula)
substr(dracula$text[500],1,21)
# Chunk 8
dracula_words<-dracula%>%
unnest_tokens(word,text)
colnames(dracula_words)
dracula_words[498:500, ]
# Chunk 9
bing<-get_sentiments('bing')
colnames(bing)
bing[498:500,]
# Chunk 10
dracula_words<-inner_join(dracula_words,bing)
dracula_words$gutenberg_id<-NULL
dracula_words[498:500,]
# Chunk 11
dracula_pos<-dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n(),sentiment=first(sentiment))%>%
arrange(count)%>%
top_n(10,wt=count)
# Chunk 12
dracula_pos
# Chunk 13
dracula_neg<-dracula_words%>%
filter(sentiment=='negative')%>%
group_by(word)%>%
summarize(count=n(),sentiment=first(sentiment))%>%
arrange(count)%>%
filter(word != 'miss')%>%
top_n(10,wt=count)
# Chunk 14
dracula_neg
# Chunk 15
dracula_pos$word<-factor(dracula_pos$word,levels=dracula_pos$word)
dracula_neg$word<-factor(dracula_neg$word,levels=dracula_neg$word)
dracula_comp<-rbind(dracula_pos,dracula_neg)
plot<-ggplot()+
geom_bar(data=dracula_comp,aes(x=word,y=count,
fill=sentiment, color=sentiment),stat='identity')+
coord_flip()+
facet_wrap(~sentiment,scales='free_y')+
scale_fill_manual(values=c('black','#ea6205'))+
scale_color_manual(values=c('#ea6205','black'))
# Chunk 16
plot
# Chunk 1
library(dplyr)
# Chunk 2
library(ggplot2)
# Chunk 3
library(gutenbergr)
# Chunk 4
library(stringr)
# Chunk 5
library(tidytext)
# Chunk 6
df<-gutenberg_works(str_detect(title,'Dracula'))
df$gutenberg_id
df$title
# Chunk 7
dracula<-gutenberg_download(345)
colnames(dracula)
substr(dracula$text[500],1,21)
# Chunk 8
dracula_words<-dracula%>%
unnest_tokens(word,text)
colnames(dracula_words)
dracula_words[498:500, ]
# Chunk 9
bing<-get_sentiments('bing')
colnames(bing)
bing[498:500,]
# Chunk 10
dracula_words<-inner_join(dracula_words,bing)
dracula_words$gutenberg_id<-NULL
dracula_words[498:500,]
# Chunk 11
dracula_pos<-dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n(),sentiment=first(sentiment))%>%
arrange(count)%>%
top_n(10,wt=count)
# Chunk 12
dracula_pos
# Chunk 13
dracula_neg<-dracula_words%>%
filter(sentiment=='negative')%>%
group_by(word)%>%
summarize(count=n(),sentiment=first(sentiment))%>%
arrange(count)%>%
filter(word != 'miss')%>%
top_n(10,wt=count)
# Chunk 14
dracula_neg
# Chunk 15
dracula_pos$word<-factor(dracula_pos$word,levels=dracula_pos$word)
dracula_neg$word<-factor(dracula_neg$word,levels=dracula_neg$word)
dracula_comp<-rbind(dracula_pos,dracula_neg)
plot<-ggplot()+
geom_bar(data=dracula_comp,aes(x=word,y=count,
fill=sentiment, color=sentiment),stat='identity')+
coord_flip()+
facet_wrap(~sentiment,scales='free_y')+
scale_fill_manual(values=c('black','#ea6205'))+
scale_color_manual(values=c('#ea6205','black'))
# Chunk 16
plot
# Chunk 1
library(dplyr)
# Chunk 2
library(ggplot2)
# Chunk 3
library(gutenbergr)
# Chunk 4
library(stringr)
# Chunk 5
library(tidytext)
# Chunk 6
df<-gutenberg_works(str_detect(title,'Dracula'))
df$gutenberg_id
df$title
# Chunk 7
dracula<-gutenberg_download(345)
colnames(dracula)
substr(dracula$text[500],1,21)
# Chunk 8
dracula_words<-dracula%>%
unnest_tokens(word,text)
colnames(dracula_words)
dracula_words[498:500, ]
# Chunk 9
bing<-get_sentiments('bing')
colnames(bing)
bing[498:500,]
# Chunk 10
dracula_words<-inner_join(dracula_words,bing)
dracula_words$gutenberg_id<-NULL
dracula_words[498:500,]
# Chunk 11
dracula_pos<-dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n(),sentiment=first(sentiment))%>%
arrange(count)%>%
top_n(10,wt=count)
# Chunk 12
dracula_pos
# Chunk 13
dracula_neg<-dracula_words%>%
filter(sentiment=='negative')%>%
group_by(word)%>%
summarize(count=n(),sentiment=first(sentiment))%>%
arrange(count)%>%
filter(word != 'miss')%>%
top_n(10,wt=count)
# Chunk 14
dracula_neg
# Chunk 15
dracula_pos$word<-factor(dracula_pos$word,levels=dracula_pos$word)
dracula_neg$word<-factor(dracula_neg$word,levels=dracula_neg$word)
dracula_comp<-rbind(dracula_pos,dracula_neg)
plot<-ggplot()+
geom_bar(data=dracula_comp,aes(x=word,y=count,
fill=sentiment, color=sentiment),stat='identity')+
coord_flip()+
facet_wrap(~sentiment,scales='free_y')+
scale_fill_manual(values=c('black','#ea6205'))+
scale_color_manual(values=c('#ea6205','black'))
# Chunk 16
plot
# Chunk 1
library(dplyr)
# Chunk 2
library(ggplot2)
# Chunk 3
library(gutenbergr)
# Chunk 4
library(stringr)
# Chunk 5
library(tidytext)
# Chunk 6
df<-gutenberg_works(str_detect(title,'Dracula'))
df$gutenberg_id
df$title
# Chunk 7
dracula<-gutenberg_download(345)
colnames(dracula)
substr(dracula$text[500],1,21)
# Chunk 8
dracula_words<-dracula%>%
unnest_tokens(word,text)
colnames(dracula_words)
dracula_words[498:500, ]
# Chunk 9
bing<-get_sentiments('bing')
colnames(bing)
bing[498:500,]
# Chunk 10
dracula_words<-inner_join(dracula_words,bing)
dracula_words$gutenberg_id<-NULL
dracula_words[498:500,]
# Chunk 11
dracula_pos<-dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n(),sentiment=first(sentiment))%>%
arrange(count)%>%
top_n(10,wt=count)
# Chunk 12
dracula_pos
# Chunk 13
dracula_neg<-dracula_words%>%
filter(sentiment=='negative')%>%
group_by(word)%>%
summarize(count=n(),sentiment=first(sentiment))%>%
arrange(count)%>%
filter(word != 'miss')%>%
top_n(10,wt=count)
# Chunk 14
dracula_neg
# Chunk 15
dracula_pos$word<-factor(dracula_pos$word,levels=dracula_pos$word)
dracula_neg$word<-factor(dracula_neg$word,levels=dracula_neg$word)
dracula_comp<-rbind(dracula_pos,dracula_neg)
plot<-ggplot()+
geom_bar(data=dracula_comp,aes(x=word,y=count,
fill=sentiment, color=sentiment),stat='identity')+
coord_flip()+
facet_wrap(~sentiment,scales='free_y')+
scale_fill_manual(values=c('black','#ea6205'))+
scale_color_manual(values=c('#ea6205','black'))
# Chunk 16
plot
